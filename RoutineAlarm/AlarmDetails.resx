<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4GoOAOBqDgDgag4A4GoOAuBq
        DgPgag4A4GoOAOBqDgPgag4C4GoOAOBqDgDgag4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOBqDgDgag4A4GoOAOBq
        DgLgag4B4GoOAOBqDgzgag4M4GoOAOBqDgHgag4C4GoOAOBqDgDgag4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4GoOAOBq
        DgDgag4C4GoOAOBqDirgag6z4GoO6uBqDurgag6z4GoOKuBqDgDgag4C4GoOAOBqDgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/kwQA/5MFAP+TBQD/kwUB/5MFAf+TBQH/kwUB/5MFAf+T
        BQH/kwUB63kLA9tkDwDhaw4s4GoO7+BqDv/gag7+4GoO/uBqDv/gag7v4WsOLNtkDwDseQsD/5MFAf+T
        BQH/kwUB/5MFAf+TBQH/kwUB/5MFAf+TBQD/kwUA/5MFAP+TBQD/kwUA/5MFAP+TBQH/kwUA/5MFAAAA
        AAAAAAAAAAAAAN5oDgDgag4C4GoOAN9pDq7faQ7/32kO+N9pDv7faQ7+32kO+N9pDv/faQ6u4GoOAOBq
        DgLeaA8AAAAAAAAAAAAAAAAA/5MFAP+TBQD/kwUB/5MFAP+TBQD/kwUAAAAAAP+TBQD/kwUA/5MFBf+T
        BRL/kwUR/5MFEf+TBRH/kwUR/pEFEv+bAw/zhAgc4m0N5uJtDf/ibQ3+4m0N/+JtDf/ibQ3+4m0N/+Jt
        DebzhAgb/5sDD/6RBRL/kwUR/5MFEf+TBRH/kwUR/5MFEv+TBQX/kwUA/5MFAAAAAAD/kwUB/5MFAP+T
        BAL/kwW//5MF9P+TBev/kwXu/5MF7v+TBe7/kwXu/5MF7f+TBe/9kAb9/ZAG//2QBv/9kAb//ZAG//2Q
        Bv/9kAb//ZAG/f+TBe//kwXt/5MF7v+TBe7/kwXu/5MF7v+TBev/kwX0/5MFwP+TBQL/kwUA/5MFAf+T
        BQH/kwUA/5IEAf+TBcT/kwX//5MF/f+TBf//kwX//5MF//+TBf//kwX//5MF//+UBf//lAX//5QF//+U
        Bf//lAX//5QF//+UBf//lAX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF/f+TBf//kwXE/5QEAf+T
        BQD/kwUBAAAAAP+TBQD/kwYA/5MFAv+TBX3/kwX//5MF/P+TBf7/kwX+/5MF/v+TBf7/kwX+/5MF//+T
        Bf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX+/5MF/v+TBf7/kwX+/5MF/v+TBfz/kwX//5MFff+U
        BQL/lAUA/5MFAQAAAAD/kwUA/5MFAP+TBQH/kwUE/5MFAP+TBXL/kwX//5MF/f+TBf//kwX//5MF//+T
        Bf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX9/5MF//+T
        BXL/kwUA/5MFBP+TBQH/kwUA/5MFAP+TBQD/kwUA/5MFAP+TBQH/kwUE/5MFAP+TBbz/kwX//5MF/P+T
        Bf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF/P+T
        Bf//kwW8/5MFAP+TBQT/kwUB/5MFAP+TBQD/kwUAAAAAAAAAAAD/kwUA/5MFAP+TBQT/kwUA/5MFVf+T
        Bf//kwX8/5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+T
        Bf//kwX8/5MF//+TBVX/kwUA/5MFBP+TBQD/kwUAAAAAAAAAAAAAAAAAAAAAAAAAAAD/kwUA/5MFAv+T
        BQD/kwUi/5MF+f+TBf//kwX+/5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+T
        Bf//kwX//5MF/v+TBf//kwX5/5MFIf+TBQD/kwUC/5MFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+T
        BQD/kwUB/5MFAP+TBRP/kwXu/5MF//+TBf7/kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+T
        Bf//kwX//5MF//+TBf//kwX+/5MF//+TBe7/kwUT/5MFAP+TBQH/kwUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP+TBQH/kwUA/5MFEv+TBe7/kwX//5MF/v+TBf//kwX//5MF//+TBf//kwX//5MF//+T
        Bf//kwX//5MF//+TBf//kwX//5MF//+TBf7/kwX//5MF7v+TBRL/kwUA/5MFAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/5MFAf+TBQD/kwUR/5MF7v+TBf//kwX+/5MF//+TBf//kwX//5MF//+T
        Bf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF/v+TBf//kwXu/5MFEf+TBQD/kwUBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/kwUB/5MFAP+TBRH/kwXt/5MF//+TBf7/kwX//5MF//+T
        Bf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX+/5MF//+TBe3/kwUR/5MFAP+T
        BQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+TBQH/kwUA/5MFDv+TBen/kwX//5MF/v+T
        Bf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf7/kwX//5MF6f+T
        BQ7/kwUA/5MFAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/5MFAf+TBQD/kgYA/5MF1f+T
        Bf//kwX9/5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF/f+T
        Bf//kwXU/5UEAP+TBQD/kwUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/kwUA/5MFA/+T
        BQD/kwWi/5MF//+TBfz/kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+T
        Bf//kwX8/5MF//+TBaL/kwUA/5MFA/+TBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+T
        BQD/kwUD/5MFAP+TBUz/kwX//5MF/P+TBf//kwX//5MF//+TBf//kwX//5MF//+TBf//kwX//5MF//+T
        Bf//kwX//5MF//+TBfz/kwX//5MFTP+TBQD/kwUD/5MFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/5MFAP+TBQD/kwYA/5MGAP+TBcH/kwX//5MF+/+TBf//kwX//5MF//+TBf//kwX//5MF//+T
        Bf//kwX//5MF//+TBf//kwX7/5MF//+TBcH/kgUA/5IFAP+TBQD/kwUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/kwUA/5MFAP+TBQL/kwUA/5MFLv+TBfL/kwX//5MF+/+TBf//kwX//5MF//+T
        Bf//kwX//5MF//+TBf//kwX//5MF+/+TBf//kwXy/5MFLv+TBQD/kwUC/5MFAP+TBAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/kwUA/5MFAP+TBQP/kwUA/5MFRf+TBfT/kwX//5MF/P+T
        Bf7/kwX//5MF/v+TBf7/kwX//5MF/v+TBfz/kwX//5MF9P+TBUX/kwUA/5MFA/+TBQD/kwUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+TBQD/kwUA/5MFAP+TBQP/kwUA/5MFKv+T
        Bcb/kwX//5UF/v+VBf7/lAX+/5QF/v+VBf7/lQX+/5MF//+TBcb/kwUr/5MFAP+TBQP/kwUA/5MFAP+T
        BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+TBQD/kwUA/5MFAP+T
        BQP5kAYA/IwHA/+VBUf3iAfi+YsH//2QBvj9kAb4+YsH//eIB+L/lQVH/IsHA/mQBgD/kwUD/5MFAP+T
        BQD/kwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+T
        BQD/kwUA/5MFAPaHCAMKAEsA2F8QB95nD+Dgag7/6XYLM+l2CzPgag7/3mcP4NdfEQcAAFEA9ocIA/+T
        BQD/kwUA/5MFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP+TBQD/kwUA3mcPAdxkDwDodAwN4GsO5uBqDv/eZw8x3mcPMuBqDv/gaw7m6HQMDdxk
        DwDeZw8B/5MFAP+TBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgag4A4GoOA+BqDgDgag6Q4GoO/+BqDvjgag744GoO/+Bq
        DpDgag4A4GoOA+BqDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOBqDgDgag4B4GoOAOBqDgfgag6Q4GoO6+Bq
        Duvgag6Q4GoOB+BqDgDgag4B4GoOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4GoOAOBqDgDgag4A4GoOAeBq
        DgDgag4K4GoOCuBqDgDgag4B4GoOAOBqDgDgag4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfag0A4GoOAOBq
        DgDgag4B4GoOA9xtCgDgYwwA4GoOA+BqDgHgag4A4GoOAN9rDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+mX///SS///qBX/oBAIBUuQCdKgAAAFQAAAAkAAAAKgAAAFSAAAEqQA
        ACXUAAAr5AAAJ/QAAC/0AAAv9AAAL/QAAC/0AAAv9AAAL/IAAE/yAABP8QAAj/kAAJ/6gAFf/UACv/6A
        AX//UAr//5AJ///IE///yBP//9JL///pl/8=
</value>
  </data>
</root>